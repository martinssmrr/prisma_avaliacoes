#!/bin/bash

# SCRIPT COMPLETO DE DEPLOY - PRISMA AVALIA√á√ïES VPS HOSTINGER
# Atualiza o sistema em produ√ß√£o com todas as melhorias implementadas

echo "üöÄ DEPLOY PRISMA AVALIA√á√ïES - HOSTINGER VPS"
echo "============================================="
echo "Data: $(date)"
echo "Todas as atualiza√ß√µes: Settings fix, SEO, Canonical Tags, Cores"
echo ""

# Configura√ß√µes do servidor
SERVER_PATH="/var/www/html/prismaavaliacoes.com.br"
BACKUP_PATH="/var/www/backups"
PROJECT_NAME="prisma_avaliacoes"

# Criar diret√≥rio de backup se n√£o existir
mkdir -p "$BACKUP_PATH"

# 1. BACKUP DO SISTEMA ATUAL
echo "üíæ 1. Fazendo backup do sistema atual..."
BACKUP_FILE="$BACKUP_PATH/backup_$(date +%Y%m%d_%H%M%S).tar.gz"
cd /var/www/html/
tar -czf "$BACKUP_FILE" prismaavaliacoes.com.br/
echo "‚úÖ Backup criado: $BACKUP_FILE"

# 2. ATUALIZAR C√ìDIGO DO REPOSIT√ìRIO
echo ""
echo "üì• 2. Atualizando c√≥digo do reposit√≥rio..."
cd "$SERVER_PATH"

# Verificar se √© um reposit√≥rio git
if [ -d ".git" ]; then
    echo "üîÑ Atualizando reposit√≥rio existente..."
    
    # Corrigir problema de ownership do Git
    git config --global --add safe.directory /var/www/html/prismaavaliacoes.com.br
    
    git fetch origin master
    git reset --hard origin/master
    echo "‚úÖ C√≥digo atualizado via Git"
else
    echo "üì¶ Clonando reposit√≥rio fresh..."
    cd /var/www/html/
    mv prismaavaliacoes.com.br prismaavaliacoes.com.br_old_$(date +%Y%m%d_%H%M%S)
    git clone https://github.com/martinssmrr/prisma_avaliacoes.git prismaavaliacoes.com.br
    cd "$SERVER_PATH"
    echo "‚úÖ Reposit√≥rio clonado"
fi

# 3. CORRE√á√ÉO CR√çTICA - RESOLVER CONFLITO SETTINGS
echo ""
echo "üîß 3. Resolvendo conflito de configura√ß√µes..."
if [ -d "setup/settings" ]; then
    mv setup/settings "setup/settings_backup_$(date +%Y%m%d_%H%M%S)"
    echo "‚úÖ Conflito setup/settings/ resolvido"
else
    echo "‚úÖ Nenhum conflito de settings encontrado"
fi

# 4. CONFIGURAR AMBIENTE VIRTUAL
echo ""
echo "üêç 4. Configurando ambiente virtual..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "‚úÖ Ambiente virtual criado"
fi

source venv/bin/activate
pip install --upgrade pip
pip install -r requirements.txt
echo "‚úÖ Depend√™ncias instaladas"

# 5. VERIFICAR CONFIGURA√á√ÉO DJANGO
echo ""
echo "üß™ 5. Testando configura√ß√£o Django..."
python manage.py check --settings=setup.settings
if [ $? -eq 0 ]; then
    echo "‚úÖ Configura√ß√£o Django v√°lida"
else
    echo "‚ùå Erro na configura√ß√£o Django"
    echo "Verifique logs acima e corrija manualmente"
    exit 1
fi

# 6. APLICAR MIGRA√á√ïES DO BANCO DE DADOS
echo ""
echo "üíΩ 6. Aplicando migra√ß√µes do banco de dados..."
python manage.py migrate --settings=setup.settings
echo "‚úÖ Migra√ß√µes aplicadas"

# 7. CONFIGURAR SEO E SITES FRAMEWORK
echo ""
echo "üéØ 7. Configurando SEO e Sites Framework..."
python manage.py shell --settings=setup.settings << 'EOF'
from django.contrib.sites.models import Site
from seo.models import SEOConfig

print("=== CONFIGURA√á√ÉO SEO ===")

# Configurar Site para URLs corretas
try:
    site = Site.objects.get(pk=1)
    site.domain = 'prismaavaliacoes.com.br'
    site.name = 'Prisma Avalia√ß√µes'
    site.save()
    print(f"‚úÖ Site configurado: {site.domain}")
except Exception as e:
    print(f"‚ùå Erro ao configurar site: {e}")

# Criar/atualizar configura√ß√£o SEO
try:
    config, created = SEOConfig.objects.get_or_create(
        pk=1,
        defaults={
            'site_name': 'Prisma Avalia√ß√µes',
            'default_description': 'Prisma Avalia√ß√µes Imobili√°rias - Especialistas em avalia√ß√µes de im√≥veis no Brasil. Laudos t√©cnicos, agilidade e confiabilidade comprovada.',
            'default_keywords': 'avalia√ß√£o imobili√°ria, laudo t√©cnico de avalia√ß√£o, avalia√ß√£o de im√≥veis, laudo de avalia√ß√£o de im√≥veis, avalia√ß√£o de um im√≥vel, modelo de avalia√ß√£o de im√≥veis',
            'contact_email': 'contato@prismaavaliacoes.com.br',
            'domain': 'prismaavaliacoes.com.br',
            'default_image': '/static/img/logo.png'
        }
    )
    
    if created:
        print(f"‚úÖ SEOConfig criado: {config.site_name}")
    else:
        # Atualizar dom√≠nio se j√° existe
        config.domain = 'prismaavaliacoes.com.br'
        config.site_name = 'Prisma Avalia√ß√µes'
        config.save()
        print(f"‚úÖ SEOConfig atualizado: {config.domain}")
        
except Exception as e:
    print(f"‚ùå Erro SEO: {e}")

print("=== CONFIGURA√á√ÉO CONCLU√çDA ===")
EOF

# 8. COLETAR ARQUIVOS EST√ÅTICOS
echo ""
echo "üìÅ 8. Coletando arquivos est√°ticos..."
python manage.py collectstatic --noinput --settings=setup.settings
echo "‚úÖ Arquivos est√°ticos coletados"

# 9. CONFIGURAR PERMISS√ïES
echo ""
echo "üîê 9. Configurando permiss√µes..."
chown -R www-data:www-data "$SERVER_PATH"
chmod -R 755 "$SERVER_PATH"
echo "‚úÖ Permiss√µes configuradas"

# 10. REINICIAR SERVI√áOS
echo ""
echo "üîÑ 10. Reiniciando servi√ßos..."

# Parar servi√ßos
systemctl stop gunicorn
systemctl stop nginx

# Aguardar parada completa
sleep 2

# Iniciar servi√ßos
systemctl start nginx
systemctl start gunicorn

# Habilitar inicializa√ß√£o autom√°tica
systemctl enable nginx
systemctl enable gunicorn

# Recarregar configura√ß√µes
systemctl reload nginx

echo "‚úÖ Servi√ßos reiniciados"

# 11. VERIFICA√á√ÉO FINAL
echo ""
echo "üìä 11. Verifica√ß√£o final dos servi√ßos..."
echo "Nginx: $(systemctl is-active nginx)"
echo "Gunicorn: $(systemctl is-active gunicorn)"

# Verificar se os processos est√£o rodando
if systemctl is-active --quiet nginx && systemctl is-active --quiet gunicorn; then
    echo "‚úÖ Todos os servi√ßos est√£o ativos"
else
    echo "‚ö†Ô∏è  Algum servi√ßo pode n√£o estar funcionando corretamente"
    echo "Status detalhado:"
    systemctl status nginx --no-pager -l
    systemctl status gunicorn --no-pager -l
fi

# 12. TESTE DE CONECTIVIDADE
echo ""
echo "üåê 12. Testando conectividade..."
curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/ | grep -q "200\|301\|302" && echo "‚úÖ Servidor Django respondendo" || echo "‚ùå Problema no servidor Django"

echo ""
echo "üéâ DEPLOY CONCLU√çDO COM SUCESSO!"
echo "============================================="
echo "üìã RESUMO DAS ATUALIZA√á√ïES APLICADAS:"
echo "‚úÖ Conflito setup/settings resolvido"
echo "‚úÖ C√≥digo atualizado do reposit√≥rio"
echo "‚úÖ Migra√ß√µes do banco aplicadas"
echo "‚úÖ SEO configurado (prismaavaliacoes.com.br)"
echo "‚úÖ Canonical tags implementadas"
echo "‚úÖ Cores atualizadas (#1e40af)"
echo "‚úÖ Arquivos est√°ticos coletados"
echo "‚úÖ Servi√ßos reiniciados"
echo ""
echo "üåê URLS PARA TESTAR:"
echo "üè† Site: https://prismaavaliacoes.com.br/"
echo "üîß Admin: https://prismaavaliacoes.com.br/admin/"
echo "üìà SEO Meta: https://prismaavaliacoes.com.br/admin/seo/seometa/"
echo "‚öôÔ∏è  SEO Config: https://prismaavaliacoes.com.br/admin/seo/seoconfig/"
echo "üó∫Ô∏è  Sitemap: https://prismaavaliacoes.com.br/sitemap.xml"
echo ""
echo "üíæ Backup do sistema anterior em: $BACKUP_FILE"
echo ""
echo "üéØ PR√ìXIMOS PASSOS:"
echo "1. Testar todas as URLs acima"
echo "2. Verificar se admin SEO est√° funcionando"
echo "3. Confirmar sitemap com dom√≠nio correto"
echo "4. Testar canonical tags no c√≥digo fonte"
echo ""
echo "‚ú® Sistema atualizado com todas as melhorias!"
