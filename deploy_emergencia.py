#!/usr/bin/env python3
"""
Script de emerg√™ncia para corrigir ALLOWED_HOSTS no PythonAnywhere
Execute: python deploy_emergencia.py
"""

import os
import subprocess
import sys
from pathlib import Path

def executar_comando(comando, descricao):
    """Executa um comando e mostra o resultado"""
    print(f"\nüîß {descricao}...")
    try:
        result = subprocess.run(comando, shell=True, capture_output=True, text=True, cwd='/home/prismaav/prisma_avaliacoes')
        if result.returncode == 0:
            print(f"‚úÖ {descricao} - Sucesso!")
            if result.stdout.strip():
                print(result.stdout.strip())
        else:
            print(f"‚ö†Ô∏è {descricao} - Aviso:")
            if result.stderr.strip():
                print(result.stderr.strip())
        return result.returncode == 0
    except Exception as e:
        print(f"‚ùå {descricao} - Erro: {e}")
        return False

def criar_env_producao():
    """Cria arquivo .env para produ√ß√£o"""
    
    env_path = Path('/home/prismaav/prisma_avaliacoes/.env')
    
    if env_path.exists():
        print("üìã Arquivo .env j√° existe")
        # Verificar se cont√©m ALLOWED_HOSTS correto
        with open(env_path, 'r') as f:
            content = f.read()
            if 'prismaav.pythonanywhere.com' in content:
                print("‚úÖ ALLOWED_HOSTS j√° configurado no .env")
                return True
    
    print("üìù Criando arquivo .env de produ√ß√£o...")
    
    env_content = """# Configura√ß√µes de produ√ß√£o PythonAnywhere
SECRET_KEY=django-insecure-(=-&$c%lq2!cxtmdwinj4uw&yftv$0*jsgn*)ew)%accjk@gk$
DEBUG=False
ALLOWED_HOSTS=prismaav.pythonanywhere.com,localhost,127.0.0.1
DB_ENGINE=django.db.backends.sqlite3
DB_NAME=db.sqlite3
DB_USER=
DB_PASSWORD=
DB_HOST=
DB_PORT=
DJANGO_SUPERUSER_USERNAME=prismaav
DJANGO_SUPERUSER_PASSWORD=PrismaAv4002@--
DJANGO_SUPERUSER_EMAIL=admin@prismaavaliacoes.com
"""
    
    try:
        with open(env_path, 'w') as f:
            f.write(env_content)
        print("‚úÖ Arquivo .env criado com sucesso!")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao criar .env: {e}")
        return False

def verificar_configuracao():
    """Verifica se a configura√ß√£o est√° correta"""
    
    print("\nüß™ Testando configura√ß√£o Django...")
    
    try:
        # Mudar para diret√≥rio do projeto
        os.chdir('/home/prismaav/prisma_avaliacoes')
        
        # Configurar Django
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'setup.production_settings')
        
        import django
        django.setup()
        
        from django.conf import settings
        
        print(f"‚úÖ ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}")
        print(f"‚úÖ DEBUG: {settings.DEBUG}")
        
        if 'prismaav.pythonanywhere.com' in settings.ALLOWED_HOSTS:
            print("‚úÖ Configura√ß√£o CORRETA!")
            return True
        else:
            print("‚ùå prismaav.pythonanywhere.com n√£o est√° em ALLOWED_HOSTS")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro na verifica√ß√£o: {e}")
        return False

def main():
    print("üö® SCRIPT DE EMERG√äNCIA - PYTHONANYWHERE")
    print("=" * 50)
    print("Corrigindo erro: Host n√£o permitido")
    print("")
    
    # Verificar se estamos no PythonAnywhere
    if not os.path.exists('/home/prismaav'):
        print("‚ùå Este script deve ser executado no PythonAnywhere!")
        sys.exit(1)
    
    # Mudar para diret√≥rio do projeto
    try:
        os.chdir('/home/prismaav/prisma_avaliacoes')
        print(f"üìÅ Diret√≥rio: {os.getcwd()}")
    except FileNotFoundError:
        print("‚ùå Diret√≥rio do projeto n√£o encontrado!")
        print("üí° Execute: git clone https://github.com/martinssmrr/prisma_avaliacoes.git")
        sys.exit(1)
    
    # Passo 1: Atualizar c√≥digo
    executar_comando('git pull origin master', 'Atualizando c√≥digo do reposit√≥rio')
    
    # Passo 2: Criar .env se necess√°rio
    criar_env_producao()
    
    # Passo 3: Instalar depend√™ncias
    executar_comando('pip3.10 install --user -r requirements.txt', 'Instalando depend√™ncias')
    
    # Passo 4: Executar migra√ß√µes
    executar_comando('python3.10 manage.py migrate --settings=setup.production_settings', 'Executando migra√ß√µes')
    
    # Passo 5: Coletar arquivos est√°ticos
    print("üì∏ Coletando arquivos est√°ticos (incluindo imagens)...")
    executar_comando('python3.10 manage.py collectstatic --noinput --settings=setup.production_settings', 'Coletando arquivos est√°ticos')
    
    # Verificar se imagens foram coletadas
    print("üñºÔ∏è Verificando imagens coletadas...")
    static_img_path = Path('/home/prismaav/prisma_avaliacoes/staticfiles/img')
    if static_img_path.exists():
        print("‚úÖ Pasta de imagens criada em staticfiles")
        img_files = list(static_img_path.glob('*.jpg'))
        if img_files:
            print(f"‚úÖ {len(img_files)} imagem(ns) encontrada(s)")
        else:
            print("‚ö†Ô∏è Nenhuma imagem encontrada")
    else:
        print("‚ö†Ô∏è Pasta staticfiles/img n√£o encontrada")
    
    # Passo 6: Verificar configura√ß√£o
    if verificar_configuracao():
        print("\n" + "=" * 50)
        print("‚úÖ CORRE√á√ÉO APLICADA COM SUCESSO!")
        print("=" * 50)
        print("\nüîÑ PR√ìXIMO PASSO OBRIGAT√ìRIO:")
        print("1. V√° para a aba 'Web' no PythonAnywhere")
        print("2. Clique em 'Reload prismaav.pythonanywhere.com'")
        print("3. Aguarde 30 segundos")
        print("4. Teste: https://prismaav.pythonanywhere.com")
        print("\n‚úÖ O erro de ALLOWED_HOSTS deve estar resolvido!")
    else:
        print("\n‚ùå Ainda h√° problemas na configura√ß√£o")
        print("üí° Verifique o Error log na aba Web do PythonAnywhere")

if __name__ == '__main__':
    main()
