#!/usr/bin/env python
"""
Script para testar templates ap√≥s corre√ß√£o do campo autor
"""

import os
import sys
import django
from django.test import RequestFactory
from django.template import Context, Template
from django.template.loader import render_to_string

# Configurar Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'setup.settings')
django.setup()

from artigos.models import Artigo
from django.http import HttpRequest

def testar_templates():
    """Testa se os templates est√£o renderizando corretamente"""
    
    print("üîß Testando templates ap√≥s corre√ß√£o do campo autor...")
    
    # Pegar um artigo para teste
    artigo = Artigo.objects.filter(publicado=True).first()
    
    if not artigo:
        print("‚ùå Nenhum artigo encontrado para teste")
        return
    
    print(f"üìù Testando com artigo: '{artigo.titulo}'")
    print(f"üë§ Autor: {artigo.autor}")
    
    # Criar request mock
    factory = RequestFactory()
    request = factory.get('/')
    
    # Teste 1: Renderiza√ß√£o b√°sica do campo autor
    try:
        template_content = """
        <p>Autor: {{ artigo.autor }}</p>
        <p>Primeira letra: {{ artigo.autor.0 }}</p>
        """
        template = Template(template_content)
        context = Context({'artigo': artigo})
        resultado = template.render(context)
        
        print("‚úÖ Template b√°sico renderizado com sucesso")
        print(f"   Resultado: {resultado.strip()}")
        
    except Exception as e:
        print(f"‚ùå Erro no template b√°sico: {e}")
    
    # Teste 2: Meta tags do detalhe
    try:
        meta_template = """<meta property="article:author" content="{{ artigo.autor }}">"""
        template = Template(meta_template)
        context = Context({'artigo': artigo})
        resultado = template.render(context)
        
        print("‚úÖ Meta tags renderizadas com sucesso")
        print(f"   Resultado: {resultado}")
        
    except Exception as e:
        print(f"‚ùå Erro nas meta tags: {e}")
    
    # Teste 3: Avatar circle (primeira letra)
    try:
        avatar_template = """<div class="avatar">{{ artigo.autor.0 }}</div>"""
        template = Template(avatar_template)
        context = Context({'artigo': artigo})
        resultado = template.render(context)
        
        print("‚úÖ Avatar renderizado com sucesso")
        print(f"   Resultado: {resultado}")
        
    except Exception as e:
        print(f"‚ùå Erro no avatar: {e}")
    
    print("\nüéâ Todos os testes de template conclu√≠dos!")
    print("\nüí° Campo autor agora funciona como texto simples:")
    print(f"   ‚Ä¢ Valor completo: '{artigo.autor}'")
    print(f"   ‚Ä¢ Primeira letra: '{artigo.autor[0] if artigo.autor else ''}'")

if __name__ == '__main__':
    testar_templates()
