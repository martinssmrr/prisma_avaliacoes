#!/bin/bash

# =============================================================================
# SCRIPT DE DEPLOY COMPLETO - VPS UBUNTU 24.04 + NGINX + GUNICORN
# Prisma Avalia√ß√µes - www.prismaavaliacoes.com.br
# =============================================================================

set -e  # Sair em caso de erro

echo "üöÄ INICIANDO DEPLOY NO VPS UBUNTU 24.04"
echo "=================================================="

# =============================================================================
# 1. ATUALIZAR SISTEMA E INSTALAR DEPEND√äNCIAS
# =============================================================================

echo "üì¶ Atualizando sistema e instalando depend√™ncias..."
apt update && apt upgrade -y
apt install python3-pip python3-venv python3-dev build-essential \
    libssl-dev libpq-dev nginx certbot python3-certbot-nginx \
    git curl wget htop nano vim supervisor -y

# Instalar Node.js (se necess√°rio para frontend)
curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
apt-get install -y nodejs

echo "‚úÖ Depend√™ncias instaladas com sucesso!"

# =============================================================================
# 2. CONFIGURAR ESTRUTURA DO PROJETO
# =============================================================================

echo "üìÅ Configurando estrutura do projeto..."

# Criar diret√≥rios
mkdir -p /var/www/Prisma_Avaliacoes
mkdir -p /var/log/gunicorn
mkdir -p /var/log/nginx
mkdir -p /var/www/Prisma_Avaliacoes/logs

# Navegar para diret√≥rio do projeto
cd /var/www/Prisma_Avaliacoes

# Criar ambiente virtual
python3 -m venv venv
source venv/bin/activate

# Atualizar pip
pip install --upgrade pip

echo "‚úÖ Estrutura do projeto configurada!"

# =============================================================================
# 3. INSTALAR DEPEND√äNCIAS PYTHON
# =============================================================================

echo "üêç Instalando depend√™ncias Python..."

# Instalar depend√™ncias b√°sicas
pip install django==5.2.5 gunicorn==21.2.0 django-jazzmin==3.0.1
pip install Pillow python-decouple pytz cryptography requests

# Se usar PostgreSQL:
# pip install psycopg2-binary

echo "‚úÖ Depend√™ncias Python instaladas!"

# =============================================================================
# 4. CONFIGURAR DJANGO
# =============================================================================

echo "‚öôÔ∏è Configurando Django..."

# Definir vari√°vel de ambiente
export DJANGO_SETTINGS_MODULE=setup.settings.vps_production

# Executar migra√ß√µes
python manage.py migrate --settings=setup.settings.vps_production

# Coletar arquivos est√°ticos
python manage.py collectstatic --noinput --settings=setup.settings.vps_production

# Criar superusu√°rio (opcional - pode ser feito depois)
echo "Criando superusu√°rio..."
cat << EOF | python manage.py shell --settings=setup.settings.vps_production
from django.contrib.auth.models import User
if not User.objects.filter(username='prismaav').exists():
    User.objects.create_superuser('prismaav', 'contato@prismaavaliacoes.com.br', 'PrismaAv4002@--')
    print("Superusu√°rio 'prismaav' criado!")
else:
    print("Superusu√°rio 'prismaav' j√° existe.")
EOF

echo "‚úÖ Django configurado!"

# =============================================================================
# 5. CONFIGURAR GUNICORN
# =============================================================================

echo "üî• Configurando Gunicorn..."

# Copiar arquivo de servi√ßo
cat << 'EOF' > /etc/systemd/system/gunicorn.service
[Unit]
Description=gunicorn daemon for Prisma Avalia√ß√µes
After=network.target

[Service]
User=root
Group=www-data
WorkingDirectory=/var/www/Prisma_Avaliacoes
Environment="PATH=/var/www/Prisma_Avaliacoes/venv/bin"
ExecStart=/var/www/Prisma_Avaliacoes/venv/bin/gunicorn \
    --access-logfile /var/log/gunicorn/access.log \
    --error-logfile /var/log/gunicorn/error.log \
    --workers 3 \
    --worker-class gthread \
    --threads 2 \
    --max-requests 1000 \
    --max-requests-jitter 100 \
    --timeout 30 \
    --keep-alive 2 \
    --bind unix:/var/www/Prisma_Avaliacoes/gunicorn.sock \
    setup.wsgi:application

ExecReload=/bin/kill -s HUP $MAINPID
KillMode=mixed
TimeoutStopSec=5
PrivateTmp=true

[Install]
WantedBy=multi-user.target
EOF

# Recarregar systemd e iniciar servi√ßo
systemctl daemon-reload
systemctl start gunicorn
systemctl enable gunicorn

# Verificar status
systemctl status gunicorn --no-pager

echo "‚úÖ Gunicorn configurado e em execu√ß√£o!"

# =============================================================================
# 6. CONFIGURAR NGINX
# =============================================================================

echo "üåê Configurando Nginx..."

# Criar configura√ß√£o do site
cat << 'EOF' > /etc/nginx/sites-available/prismaavaliacoes
server {
    listen 80;
    server_name www.prismaavaliacoes.com.br prismaavaliacoes.com.br;
    
    # Logs
    access_log /var/log/nginx/prismaavaliacoes_access.log;
    error_log /var/log/nginx/prismaavaliacoes_error.log;

    # Favicon
    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Arquivos est√°ticos
    location /static/ {
        alias /var/www/Prisma_Avaliacoes/staticfiles/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Arquivos de media
    location /media/ {
        alias /var/www/Prisma_Avaliacoes/media/;
        expires 30d;
        add_header Cache-Control "public";
    }

    # Proxy para Gunicorn
    location / {
        include proxy_params;
        proxy_pass http://unix:/var/www/Prisma_Avaliacoes/gunicorn.sock;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Limitar tamanho de upload
    client_max_body_size 50M;
}
EOF

# Ativar site
ln -sf /etc/nginx/sites-available/prismaavaliacoes /etc/nginx/sites-enabled/

# Remover site padr√£o
rm -f /etc/nginx/sites-enabled/default

# Testar configura√ß√£o
nginx -t

# Reiniciar nginx
systemctl restart nginx
systemctl enable nginx

echo "‚úÖ Nginx configurado!"

# =============================================================================
# 7. CONFIGURAR PERMISS√ïES
# =============================================================================

echo "üîê Configurando permiss√µes..."

# Alterar propriet√°rio dos arquivos
chown -R root:www-data /var/www/Prisma_Avaliacoes/
chmod -R 755 /var/www/Prisma_Avaliacoes/

# Permiss√µes espec√≠ficas
chmod 664 /var/www/Prisma_Avaliacoes/db.sqlite3
chmod 755 /var/www/Prisma_Avaliacoes/manage.py

# Permiss√µes para logs
chown -R www-data:www-data /var/log/gunicorn/
chmod -R 755 /var/log/gunicorn/

echo "‚úÖ Permiss√µes configuradas!"

# =============================================================================
# 8. CONFIGURAR SSL COM CERTBOT
# =============================================================================

echo "üîí Configurando SSL com Let's Encrypt..."

# Obter certificado SSL
certbot --nginx -d prismaavaliacoes.com.br -d www.prismaavaliacoes.com.br --non-interactive --agree-tos --email contato@prismaavaliacoes.com.br

# Recarregar nginx
systemctl reload nginx

# Configurar renova√ß√£o autom√°tica
(crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet") | crontab -

echo "‚úÖ SSL configurado!"

# =============================================================================
# 9. CRIAR SCRIPT DE ATUALIZA√á√ÉO
# =============================================================================

echo "üìù Criando script de atualiza√ß√£o..."

cat << 'EOF' > /var/www/Prisma_Avaliacoes/update.sh
#!/bin/bash
# Script para atualizar o projeto

cd /var/www/Prisma_Avaliacoes
source venv/bin/activate

echo "üîÑ Atualizando c√≥digo..."
git pull origin main

echo "üì¶ Instalando depend√™ncias..."
pip install -r requirements_vps.txt

echo "üóÑÔ∏è Executando migra√ß√µes..."
python manage.py migrate --settings=setup.settings.vps_production

echo "üìÅ Coletando arquivos est√°ticos..."
python manage.py collectstatic --noinput --settings=setup.settings.vps_production

echo "üîÑ Reiniciando servi√ßos..."
systemctl restart gunicorn
systemctl reload nginx

echo "‚úÖ Atualiza√ß√£o conclu√≠da!"
EOF

chmod +x /var/www/Prisma_Avaliacoes/update.sh

# =============================================================================
# 10. VERIFICA√á√ïES FINAIS
# =============================================================================

echo "üîç Realizando verifica√ß√µes finais..."

# Verificar status dos servi√ßos
echo "Status do Gunicorn:"
systemctl is-active gunicorn

echo "Status do Nginx:"
systemctl is-active nginx

# Testar conectividade
echo "Testando conectividade local:"
curl -I http://localhost/ || echo "Erro na conectividade local"

# =============================================================================
# 11. RESUMO FINAL
# =============================================================================

echo ""
echo "üéâ DEPLOY CONCLU√çDO COM SUCESSO!"
echo "=================================================="
echo ""
echo "üåê SITE DISPON√çVEL EM:"
echo "- HTTP: http://www.prismaavaliacoes.com.br"
echo "- HTTPS: https://www.prismaavaliacoes.com.br"
echo ""
echo "üìä ADMIN DISPON√çVEL EM:"
echo "- https://www.prismaavaliacoes.com.br/admin/"
echo "- Usu√°rio: prismaav"
echo "- Senha: PrismaAv4002@--"
echo ""
echo "üìÅ LOCALIZA√á√ÉO DOS ARQUIVOS:"
echo "- Projeto: /var/www/Prisma_Avaliacoes/"
echo "- Logs Gunicorn: /var/log/gunicorn/"
echo "- Logs Nginx: /var/log/nginx/"
echo ""
echo "üîß COMANDOS √öTEIS:"
echo "- Reiniciar Gunicorn: systemctl restart gunicorn"
echo "- Reiniciar Nginx: systemctl restart nginx"
echo "- Ver logs: tail -f /var/log/gunicorn/error.log"
echo "- Atualizar projeto: /var/www/Prisma_Avaliacoes/update.sh"
echo ""
echo "‚úÖ DEPLOY FINALIZADO!"
